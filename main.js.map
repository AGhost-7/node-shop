{"version":3,"sources":["index.coffee","masks.coffee","home.coffee","products.coffee","login.coffee","nav.coffee","cart.coffee"],"names":[],"mappings":"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","file":"main.js","sourceRoot":"/source/","sourcesContent":["\napp = angular.module('node-shop', ['ngRoute'])\n\napp\n.config(['$routeProvider', ($routeProvider) ->\n  $routeProvider\n    .when('/home',\n      templateUrl: '/html/home.tmpl'\n      controller: 'homeCtrl'\n    )\n    .when('/product',\n      templateUrl: '/html/products.tmpl'\n      controller: 'productCtrl'\n    )\n    .when('/login',\n      templateUrl: '/html/login.tmpl'\n      controller: 'loginCtrl'\n    )\n    .when('/cart',\n      templateUrl: 'html/cart.tmpl'\n      controller: 'cartCtrl'\n    )\n    .otherwise(redirectTo: '/home')\n\n])\n.run(['$rootScope', '$http', ($rootScope, $http) ->\n  $rootScope.username = undefined\n\n  $http\n    .get('/user')\n    .success((data) -> $rootScope.username = data.name)\n])\n","\napp\n.directive('currencyModel', ->\n  restrict: 'A'\n  require: 'ngModel'\n  link : (scope, el, attrs, ctrl) ->\n    last = undefined\n    ctrl.$parsers.push((input) -> \n      if !el.val().match(/^[0-9]*[.]{0,1}[0-9]{0,2}$/g)\n        ctrl.$setViewValue(last)\n        ctrl.$render()\n      else\n        last = el.val()\n    )\n)\n.directive('intModel', ->\n  restrict: 'A'\n  require: 'ngModel'\n  link: (scope, el, attrs, ctrl) ->\n    last = undefined\n    ctrl.$parsers.push((input) ->\n      if !el.val().match(/^[0-9]*$/g)\n        ctrl.$setViewValue(last)\n        ctrl.$render()\n      else\n        last = el.val()\n    )\n)\n","\nhomeCtrl = ($scope) ->\n\napp.controller('homeCtrl', ['$scope', homeCtrl])\n","\nproductCtrl = ($scope, $routeParams, $http) ->\n\n  $scope.page = $routeParams.page ? 1\n  $scope.manufacturers = []\n  $scope.categories = []\n\n  watchParams = ['name', 'minprice', 'maxprice', 'manufacturer', 'category', 'order']\n  paramNames = watchParams.concat('page')\n\n  search = ->\n    params = {}\n    for name in paramNames\n      if $scope[name]? && $scope[name] != ''\n        params[name] = $scope[name]\n    $http(method: 'GET', url: '/product', params: params)\n      .success((data) ->\n        $scope.items = data\n      )\n\n  for name in watchParams\n    $scope.$watch(name, (n, o)->\n      if n != o\n        $scope.page = 1\n        search()\n    )\n  $scope.$watch('page', search)\n\n  $scope.purchase = (item, amount) ->\n    $http(\n      method: 'POST'\n      url: \"/cart/#{item.id}/#{amount}\"\n    )\n    .success((data) =>\n      item.quantity -= amount\n      if item.quantity == 0\n        $scope.items = $scope.items.filter((e) -> e.id != item.id)\n      else\n        # Make it so that the dropdown goes back to its original state\n        this.amount = undefined\n    )\n\n  $scope.range = (from, to) -> [undefined].concat([from..to])\n\n  $http\n    .get('/product/manufacturer')\n    .success((data) ->\n      $scope.manufacturers = [undefined].concat(data)\n    )\n\n  $http\n    .get('/product/category')\n    .success((data) ->\n      $scope.categories = [undefined].concat(data)\n    )\n\n  $scope.changePage = (i) ->\n    if $scope.page + i > 0 then $scope.page += i\n\n\n\napp.controller('productCtrl', ['$scope', '$routeParams', '$http', productCtrl])\n","loginCtrl = ($scope, $http, $location, $rootScope) ->\n\n  $scope.login = (n, pw)->\n    $http(\n      method: 'POST'\n      url: '/user/login'\n      data:\n        name: n\n        password: pw\n    )\n    .success((data) ->\n      $rootScope.username = data.name\n      $location.path('/home')\n    )\n    .error((data) ->\n      $scope.error = data.message\n    )\n\napp.controller('loginCtrl', ['$scope', '$http', '$location', '$rootScope', loginCtrl])\n","\nnavCtrl = ($scope, $rootScope, $http) ->\n\n  $scope.logout = ->\n    $http\n      .post('/user/logout')\n      .success( ->\n        $rootScope.username = undefined\n      )\n\napp.controller('navCtrl', ['$scope', '$rootScope', '$http', navCtrl])\n","\n\ncartCtrl = ($scope, $http) ->\n  \n  $http\n    .get('/cart')\n    .success((data) ->\n      for key, val of data\n        $scope[key] = val\n    )\n\napp.controller('cartCtrl', ['$scope', '$http', cartCtrl])\n"]}